//
// File generated by /work/halla/gmp12/longwu/software/root/install/5.34.36/bin/rootcint at Thu Apr 20 23:21:28 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Gmp_HRSDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Gmp_HRSDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Gmp_HRS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Gmp_HRS(void *p);
   static void deleteArray_Gmp_HRS(void *p);
   static void destruct_Gmp_HRS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Gmp_HRS*)
   {
      ::Gmp_HRS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Gmp_HRS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Gmp_HRS", ::Gmp_HRS::Class_Version(), "./Gmp_HRS.h", 14,
                  typeid(::Gmp_HRS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Gmp_HRS::Dictionary, isa_proxy, 4,
                  sizeof(::Gmp_HRS) );
      instance.SetDelete(&delete_Gmp_HRS);
      instance.SetDeleteArray(&deleteArray_Gmp_HRS);
      instance.SetDestructor(&destruct_Gmp_HRS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Gmp_HRS*)
   {
      return GenerateInitInstanceLocal((::Gmp_HRS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Gmp_HRS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr Gmp_HRS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Gmp_HRS::Class_Name()
{
   return "Gmp_HRS";
}

//______________________________________________________________________________
const char *Gmp_HRS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Gmp_HRS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Gmp_HRS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Gmp_HRS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Gmp_HRS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Gmp_HRS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Gmp_HRS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Gmp_HRS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void Gmp_HRS::Streamer(TBuffer &R__b)
{
   // Stream an object of class Gmp_HRS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Gmp_HRS::Class(),this);
   } else {
      R__b.WriteClassBuffer(Gmp_HRS::Class(),this);
   }
}

//______________________________________________________________________________
void Gmp_HRS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Gmp_HRS.
      TClass *R__cl = ::Gmp_HRS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*s2_scin", &s2_scin);
      THaSpectrometer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Gmp_HRS(void *p) {
      delete ((::Gmp_HRS*)p);
   }
   static void deleteArray_Gmp_HRS(void *p) {
      delete [] ((::Gmp_HRS*)p);
   }
   static void destruct_Gmp_HRS(void *p) {
      typedef ::Gmp_HRS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Gmp_HRS

/********************************************************
* Gmp_HRSDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGmp_HRSDict();

extern "C" void G__set_cpp_environmentGmp_HRSDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Gmp_HRS.h");
  G__cpp_reset_tagtableGmp_HRSDict();
}
#include <new>
extern "C" int G__cpp_dllrevGmp_HRSDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Gmp_HRS */
static int G__Gmp_HRSDict_265_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Gmp_HRS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Gmp_HRS((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Gmp_HRS((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Gmp_HRS*) G__getstructoffset())->TrackTimes((TClonesArray*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((Gmp_HRS*) G__getstructoffset())->SetTrSorting((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Gmp_HRS*) G__getstructoffset())->SetTrSorting());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Gmp_HRS*) G__getstructoffset())->GetTrSorting());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Gmp_HRS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Gmp_HRS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Gmp_HRS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Gmp_HRS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Gmp_HRS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Gmp_HRS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Gmp_HRS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Gmp_HRS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_HRSDict_265_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Gmp_HRS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Gmp_HRS G__TGmp_HRS;
static int G__Gmp_HRSDict_265_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Gmp_HRS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Gmp_HRS*) (soff+(sizeof(Gmp_HRS)*i)))->~G__TGmp_HRS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Gmp_HRS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Gmp_HRS*) (soff))->~G__TGmp_HRS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Gmp_HRS */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGmp_HRSDict {
 public:
  G__Sizep2memfuncGmp_HRSDict(): p(&G__Sizep2memfuncGmp_HRSDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGmp_HRSDict::*p)();
};

size_t G__get_sizep2memfuncGmp_HRSDict()
{
  G__Sizep2memfuncGmp_HRSDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGmp_HRSDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS))) {
     Gmp_HRS *G__Lderived;
     G__Lderived=(Gmp_HRS*)0x1000;
     {
       THaSpectrometer *G__Lpbase=(THaSpectrometer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS),G__get_linked_tagnum(&G__Gmp_HRSDictLN_THaSpectrometer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS),G__get_linked_tagnum(&G__Gmp_HRSDictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS),G__get_linked_tagnum(&G__Gmp_HRSDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS),G__get_linked_tagnum(&G__Gmp_HRSDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS),G__get_linked_tagnum(&G__Gmp_HRSDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaTrackingModule *G__Lpbase=(THaTrackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS),G__get_linked_tagnum(&G__Gmp_HRSDictLN_THaTrackingModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaVertexModule *G__Lpbase=(THaVertexModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS),G__get_linked_tagnum(&G__Gmp_HRSDictLN_THaVertexModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGmp_HRSDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__Gmp_HRSDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Gmp_HRS */
static void G__setup_memvarGmp_HRS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS));
   { Gmp_HRS *p; p=(Gmp_HRS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Gmp_HRSDictLN_THaScintillator),-1,-1,2,"s2_scin=",0,"Instantiation of s2");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,2,"kSortTracks=65536ULL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Gmp_HRSDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGmp_HRSDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGmp_HRS(void) {
   /* Gmp_HRS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS));
   G__memfunc_setup("Gmp_HRS",624,G__Gmp_HRSDict_265_0_1, 105, G__get_linked_tagnum(&G__Gmp_HRSDictLN_Gmp_HRS), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindVertices",1222,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TrackCalc",872,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TrackTimes",1015,G__Gmp_HRSDict_265_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TClonesArray' - 0 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrSorting",1240,G__Gmp_HRSDict_265_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrSorting",1228,G__Gmp_HRSDict_265_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Gmp_HRSDict_265_0_7, 85, G__get_linked_tagnum(&G__Gmp_HRSDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Gmp_HRS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Gmp_HRSDict_265_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Gmp_HRS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Gmp_HRSDict_265_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Gmp_HRS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Gmp_HRSDict_265_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Gmp_HRS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Gmp_HRSDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Gmp_HRSDict_265_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Gmp_HRSDict_265_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Gmp_HRS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Gmp_HRSDict_265_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Gmp_HRS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Gmp_HRSDict_265_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Gmp_HRS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Gmp_HRSDict_265_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Gmp_HRS::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Gmp_HRS", 750, G__Gmp_HRSDict_265_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGmp_HRSDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGmp_HRSDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGmp_HRSDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__Gmp_HRSDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_THaAnalysisObject = { "THaAnalysisObject" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_THaApparatus = { "THaApparatus" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_THaVertexModule = { "THaVertexModule" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_THaSpectrometer = { "THaSpectrometer" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_THaTrackingModule = { "THaTrackingModule" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_THaScintillator = { "THaScintillator" , 99 , -1 };
G__linked_taginfo G__Gmp_HRSDictLN_Gmp_HRS = { "Gmp_HRS" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGmp_HRSDict() {
  G__Gmp_HRSDictLN_TClass.tagnum = -1 ;
  G__Gmp_HRSDictLN_TBuffer.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMemberInspector.tagnum = -1 ;
  G__Gmp_HRSDictLN_TObject.tagnum = -1 ;
  G__Gmp_HRSDictLN_TNamed.tagnum = -1 ;
  G__Gmp_HRSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TClonesArray.tagnum = -1 ;
  G__Gmp_HRSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_THaAnalysisObject.tagnum = -1 ;
  G__Gmp_HRSDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_THaApparatus.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_THaVertexModule.tagnum = -1 ;
  G__Gmp_HRSDictLN_THaSpectrometer.tagnum = -1 ;
  G__Gmp_HRSDictLN_THaTrackingModule.tagnum = -1 ;
  G__Gmp_HRSDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__Gmp_HRSDictLN_THaScintillator.tagnum = -1 ;
  G__Gmp_HRSDictLN_Gmp_HRS.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGmp_HRSDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_THaAnalysisObject);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_THaApparatus);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_THaVertexModule);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_THaSpectrometer);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_THaTrackingModule);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_THaScintillator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Gmp_HRSDictLN_Gmp_HRS),sizeof(Gmp_HRS),-1,324608,"A Hall A High Resolution Spectrometer",G__setup_memvarGmp_HRS,G__setup_memfuncGmp_HRS);
}
extern "C" void G__cpp_setupGmp_HRSDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGmp_HRSDict()");
  G__set_cpp_environmentGmp_HRSDict();
  G__cpp_setup_tagtableGmp_HRSDict();

  G__cpp_setup_inheritanceGmp_HRSDict();

  G__cpp_setup_typetableGmp_HRSDict();

  G__cpp_setup_memvarGmp_HRSDict();

  G__cpp_setup_memfuncGmp_HRSDict();
  G__cpp_setup_globalGmp_HRSDict();
  G__cpp_setup_funcGmp_HRSDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGmp_HRSDict();
  return;
}
class G__cpp_setup_initGmp_HRSDict {
  public:
    G__cpp_setup_initGmp_HRSDict() { G__add_setup_func("Gmp_HRSDict",(G__incsetup)(&G__cpp_setupGmp_HRSDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGmp_HRSDict() { G__remove_setup_func("Gmp_HRSDict"); }
};
G__cpp_setup_initGmp_HRSDict G__cpp_setup_initializerGmp_HRSDict;

