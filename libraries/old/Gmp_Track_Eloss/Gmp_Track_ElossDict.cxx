//
// File generated by /adaqfs/apps/ROOT/pro/bin/rootcint at Tue Aug  2 16:57:01 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Gmp_Track_ElossDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Gmp_Track_ElossDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Gmp_Track_Eloss_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Gmp_Track_Eloss(void *p);
   static void deleteArray_Gmp_Track_Eloss(void *p);
   static void destruct_Gmp_Track_Eloss(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Gmp_Track_Eloss*)
   {
      ::Gmp_Track_Eloss *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Gmp_Track_Eloss >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Gmp_Track_Eloss", ::Gmp_Track_Eloss::Class_Version(), "./Gmp_Track_Eloss.h", 13,
                  typeid(::Gmp_Track_Eloss), DefineBehavior(ptr, ptr),
                  &::Gmp_Track_Eloss::Dictionary, isa_proxy, 4,
                  sizeof(::Gmp_Track_Eloss) );
      instance.SetDelete(&delete_Gmp_Track_Eloss);
      instance.SetDeleteArray(&deleteArray_Gmp_Track_Eloss);
      instance.SetDestructor(&destruct_Gmp_Track_Eloss);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Gmp_Track_Eloss*)
   {
      return GenerateInitInstanceLocal((::Gmp_Track_Eloss*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Gmp_Track_Eloss*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Gmp_Track_Eloss::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Gmp_Track_Eloss::Class_Name()
{
   return "Gmp_Track_Eloss";
}

//______________________________________________________________________________
const char *Gmp_Track_Eloss::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Gmp_Track_Eloss*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Gmp_Track_Eloss::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Gmp_Track_Eloss*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Gmp_Track_Eloss::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Gmp_Track_Eloss*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Gmp_Track_Eloss::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Gmp_Track_Eloss*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Gmp_Track_Eloss::Streamer(TBuffer &R__b)
{
   // Stream an object of class Gmp_Track_Eloss.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Gmp_Track_Eloss::Class(),this);
   } else {
      R__b.WriteClassBuffer(Gmp_Track_Eloss::Class(),this);
   }
}

//______________________________________________________________________________
void Gmp_Track_Eloss::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Gmp_Track_Eloss.
      TClass *R__cl = ::Gmp_Track_Eloss::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTLength", &fTLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAirLength", &fAirLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackModule", &fTrackModule);
      THaElossCorrection::ShowMembers(R__insp);
      THaTrackingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_Gmp_Track_Eloss(void *p) {
      delete ((::Gmp_Track_Eloss*)p);
   }
   static void deleteArray_Gmp_Track_Eloss(void *p) {
      delete [] ((::Gmp_Track_Eloss*)p);
   }
   static void destruct_Gmp_Track_Eloss(void *p) {
      typedef ::Gmp_Track_Eloss current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Gmp_Track_Eloss

/********************************************************
* Gmp_Track_ElossDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGmp_Track_ElossDict();

extern "C" void G__set_cpp_environmentGmp_Track_ElossDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Gmp_Track_Eloss.h");
  G__cpp_reset_tagtableGmp_Track_ElossDict();
}
#include <new>
extern "C" int G__cpp_dllrevGmp_Track_ElossDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Gmp_Track_Eloss */
static int G__Gmp_Track_ElossDict_250_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Gmp_Track_Eloss* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5])
, (const Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5])
, (const Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5])
, (const Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5])
, (const Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5])
, (const Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5])
, (const Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) Gmp_Track_Eloss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Gmp_Track_Eloss((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Gmp_Track_Eloss((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_Track_ElossDict_250_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Gmp_Track_Eloss::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_Track_ElossDict_250_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Gmp_Track_Eloss::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_Track_ElossDict_250_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Gmp_Track_Eloss::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_Track_ElossDict_250_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Gmp_Track_Eloss::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_Track_ElossDict_250_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Gmp_Track_Eloss*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_Track_ElossDict_250_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Gmp_Track_Eloss::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_Track_ElossDict_250_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Gmp_Track_Eloss::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_Track_ElossDict_250_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Gmp_Track_Eloss::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Gmp_Track_ElossDict_250_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Gmp_Track_Eloss::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Gmp_Track_Eloss G__TGmp_Track_Eloss;
static int G__Gmp_Track_ElossDict_250_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Gmp_Track_Eloss*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Gmp_Track_Eloss*) (soff+(sizeof(Gmp_Track_Eloss)*i)))->~G__TGmp_Track_Eloss();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Gmp_Track_Eloss*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Gmp_Track_Eloss*) (soff))->~G__TGmp_Track_Eloss();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Gmp_Track_Eloss */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGmp_Track_ElossDict {
 public:
  G__Sizep2memfuncGmp_Track_ElossDict(): p(&G__Sizep2memfuncGmp_Track_ElossDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGmp_Track_ElossDict::*p)();
};

size_t G__get_sizep2memfuncGmp_Track_ElossDict()
{
  G__Sizep2memfuncGmp_Track_ElossDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGmp_Track_ElossDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss))) {
     Gmp_Track_Eloss *G__Lderived;
     G__Lderived=(Gmp_Track_Eloss*)0x1000;
     {
       THaElossCorrection *G__Lpbase=(THaElossCorrection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss),G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_THaElossCorrection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaPhysicsModule *G__Lpbase=(THaPhysicsModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss),G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_THaPhysicsModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss),G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss),G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss),G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaTrackingModule *G__Lpbase=(THaTrackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss),G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_THaTrackingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGmp_Track_ElossDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Gmp_Track_Eloss */
static void G__setup_memvarGmp_Track_Eloss(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss));
   { Gmp_Track_Eloss *p; p=(Gmp_Track_Eloss*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTLength=",0,"Length of target (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAirLength=",0,"Air between scattering chamber and spectrometer (m)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_THaTrackingModule),-1,-1,2,"fTrackModule=",0,"Pointer to tracking module");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGmp_Track_ElossDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGmp_Track_Eloss(void) {
   /* Gmp_Track_Eloss */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss));
   G__memfunc_setup("Gmp_Track_Eloss",1501,G__Gmp_Track_ElossDict_250_0_1, 105, G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - description "
"C - - 10 '\"\"' input_tracks C - - 10 '\"\"' vertex "
"d - 'Double_t' 10 '0.15' t_length d - 'Double_t' 10 '0.0' z_offset "
"d - 'Double_t' 10 '0.3386' air_length d - 'Double_t' 0 '0.511e-3' particle_mass "
"i - 'Int_t' 0 '1' hadron_charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - run_time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcEloss",889,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'THaTrackInfo' - 0 - trkifo", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__Gmp_Track_ElossDict_250_0_7, 85, G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Gmp_Track_Eloss::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Gmp_Track_ElossDict_250_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Gmp_Track_Eloss::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Gmp_Track_ElossDict_250_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Gmp_Track_Eloss::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Gmp_Track_ElossDict_250_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Gmp_Track_Eloss::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Gmp_Track_ElossDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Gmp_Track_ElossDict_250_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Gmp_Track_ElossDict_250_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Gmp_Track_Eloss::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Gmp_Track_ElossDict_250_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Gmp_Track_Eloss::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Gmp_Track_ElossDict_250_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Gmp_Track_Eloss::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Gmp_Track_ElossDict_250_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Gmp_Track_Eloss::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Gmp_Track_Eloss", 1627, G__Gmp_Track_ElossDict_250_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGmp_Track_ElossDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGmp_Track_ElossDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGmp_Track_ElossDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__Gmp_Track_ElossDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_THaEvData = { "THaEvData" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_THaAnalysisObject = { "THaAnalysisObject" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_THaAnalysisObjectcLcLEStatus = { "THaAnalysisObject::EStatus" , 101 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_THaAnalysisObjectcLcLEMode = { "THaAnalysisObject::EMode" , 101 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_THaPhysicsModule = { "THaPhysicsModule" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_THaElossCorrection = { "THaElossCorrection" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_THaTrackInfo = { "THaTrackInfo" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_THaTrackingModule = { "THaTrackingModule" , 99 , -1 };
G__linked_taginfo G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss = { "Gmp_Track_Eloss" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGmp_Track_ElossDict() {
  G__Gmp_Track_ElossDictLN_TClass.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TBuffer.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMemberInspector.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TObject.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TNamed.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TDatime.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_THaEvData.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_THaAnalysisObject.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_THaAnalysisObjectcLcLEStatus.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_THaAnalysisObjectcLcLEMode.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_THaPhysicsModule.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_THaElossCorrection.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_THaTrackInfo.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_THaTrackingModule.tagnum = -1 ;
  G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGmp_Track_ElossDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TDatime);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_THaEvData);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_THaAnalysisObject);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_THaAnalysisObjectcLcLEStatus);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_THaAnalysisObjectcLcLEMode);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_THaPhysicsModule);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_THaElossCorrection);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_THaTrackInfo);
   G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_THaTrackingModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Gmp_Track_ElossDictLN_Gmp_Track_Eloss),sizeof(Gmp_Track_Eloss),-1,324608,"Track energy loss correction module",G__setup_memvarGmp_Track_Eloss,G__setup_memfuncGmp_Track_Eloss);
}
extern "C" void G__cpp_setupGmp_Track_ElossDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGmp_Track_ElossDict()");
  G__set_cpp_environmentGmp_Track_ElossDict();
  G__cpp_setup_tagtableGmp_Track_ElossDict();

  G__cpp_setup_inheritanceGmp_Track_ElossDict();

  G__cpp_setup_typetableGmp_Track_ElossDict();

  G__cpp_setup_memvarGmp_Track_ElossDict();

  G__cpp_setup_memfuncGmp_Track_ElossDict();
  G__cpp_setup_globalGmp_Track_ElossDict();
  G__cpp_setup_funcGmp_Track_ElossDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGmp_Track_ElossDict();
  return;
}
class G__cpp_setup_initGmp_Track_ElossDict {
  public:
    G__cpp_setup_initGmp_Track_ElossDict() { G__add_setup_func("Gmp_Track_ElossDict",(G__incsetup)(&G__cpp_setupGmp_Track_ElossDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGmp_Track_ElossDict() { G__remove_setup_func("Gmp_Track_ElossDict"); }
};
G__cpp_setup_initGmp_Track_ElossDict G__cpp_setup_initializerGmp_Track_ElossDict;

